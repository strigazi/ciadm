stages:
  - build
  - deploy
  - test

before_script:
  - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN gitlab-registry.cern.ch

deploy branch:
  stage: deploy
  image: gitlab-registry.cern.ch/cloud/ciadm:qa
  script:
    - docker build -t gitlab-registry.cern.ch/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:$CI_BUILD_REF .
    - docker push gitlab-registry.cern.ch/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:$CI_BUILD_REF
  except:
    - master
    - qa
  tags:
    - cci-swarm-builder

test branch:
  stage: test
  image: gitlab-registry.cern.ch/cloud/ciadm:qa
  script:
    - docker run gitlab-registry.cern.ch/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:$CI_BUILD_REF docker
    - docker run gitlab-registry.cern.ch/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:$CI_BUILD_REF docker-compose --help
    - docker run gitlab-registry.cern.ch/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:$CI_BUILD_REF kubectl
  except:
    - master
    - qa
  tags:
    - cci-swarm-builder

deploy qa:
  stage: deploy
  image: gitlab-registry.cern.ch/cloud/ciadm:qa
  environment: qa
  script:
    - docker pull gitlab-registry.cern.ch/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:$CI_BUILD_REF
    - docker tag gitlab-registry.cern.ch/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:$CI_BUILD_REF gitlab-registry.cern.ch/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:qa
    - docker push gitlab-registry.cern.ch/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:qa
  only:
    - qa
  tags:
    - cci-swarm-builder

deploy production:
  stage: deploy
  image: gitlab-registry.cern.ch/cloud/ciadm:qa
  environment: production
  script:
    - docker pull gitlab-registry.cern.ch/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:$CI_BUILD_REF
    - docker tag gitlab-registry.cern.ch/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:$CI_BUILD_REF gitlab-registry.cern.ch/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:latest
    - docker push gitlab-registry.cern.ch/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:latest
  only:
    - master
  tags:
    - cci-swarm-builder
